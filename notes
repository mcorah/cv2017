###########################
# Installation of externals
###########################

BSR:
  # Make sure you copy the revised 
  # external/buildW.cpp and external/buildW.cpp.patch files to BSR/grouping/source/buildW
  # external/match_segmentations2.m, external/match_segmentations2.m.patch to BSR/bench/benchmarks, 
  # external/ucm_mean_pb.cpp and external/ucm_mean_pb.cpp.patch files to BSR/grouping/source/ucm
  cd grouping/source
  # see readme
  # possibly slightly modify ld_preload
  export LD_PRELOAD=/lib/x86_64-linux-gnu/libc.so.6:/usr/lib/x86_64-linux-gnu/libstdc++.so.6:/lib/x86_64-linux-gnu/libgcc_s.so.1
  # edit gpb_src/Rules.make (matlab)
  # in grouping/source
  source build.sh

vlfeat:
  make
  ln -s <vlfeat dir> vlfeat # so they can find the package

# moving on to liblinear since that should be simpler
liblinear-2.11:
  # in top level
  make clean; make;
  cd matlab
  # Edit makefile with matlab install (e.g. /usr/local/MATLAB/R2015a)
  make;
  # produced train.mexa64 and predict.mexa64 as expected

liblinear dense:
  # in top level folder
  make clean; make;
  cd matlab
  # Edit makefile with matlab install as for standard liblinear
  # Change "\#" to "=" in makefile. No I don't know why.
  mv predict.mexa64 predictDense.mexa64
  mv train.mexa64 trainDense.mexa64
  # It may be necessary to do more to make sure the different versions of
  # liblinear don't conflict

colordescriptors:
  ????

ImageStack:
  # in makefiles/Makefile.linux
  # If fftw doesn't work, install libfftw3-dev
  # If you have dsymlink@GLIBC error, then go into Makefile.common, and in line 81, at the very end after "$(BIN_TARGET)" add "-ldl"
  make -f makefiles/Makefile.linux clean
  make -f makefiles/Makefile.linux
  # build completed, hopefully deleted dependencies aren't critical

  # Apparently they want the binary in the top directory of external...
  mv ImageStack ImageStack_dir
  ln -s ImageStack_dir/bin/ImageStack .

#######
# Setup
#######

Make sure in external/ you have the ImageStack folder named as "ImageStack" and not "imagestack"
In getPaths, change end of line 38, from "'external', 'ImageStack');" to "'external', 'ImageStack', 'bin', 'ImageStack');"
If NOT this, then make sure you copy the binary to the top directory as in the ImageStack notes above

In segmentation/computeLocalCues line 6, add 
"
dName = fullfile(paths.colorCues);
		if(~exist(dName, 'dir'))
			mkdir(dName);
		end
"

edited paths in COM/getPaths.m and allBenchmarks/benchmarkPaths.m as per
instructions

created miniture nyu split using mini_nyu.m
edited getImageSet to use smaller splits for dev purposes

Unfortunately, it complains about directories existing.
There might be a script for these, but otherwise, just create them as you see
them?

Complains about ucm features? Run ucm stuff first?

#####################
Reduce training size
#####################

Use Micah's mini_nyu.m to generate ../data/benchmarkData/metadata/nyusplits_mini.mat
In allBenchmarks/getImageSet.m, change line 4 from "fName = 'nyusplits';" to "fName = 'nyusplits_mini';"

Seems that they have a bunch of files of the form wrapper*.m to compute the
various steps.

###########
# Execution
###########

startup
wrapperSegmentation
